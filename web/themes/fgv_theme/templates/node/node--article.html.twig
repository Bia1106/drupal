{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}

  <div class="py-5" style="background-image: linear-gradient(to bottom, rgb(0, 0, 0, 0.5), rgb(0, 0, 0, 0.5)), url(&quot;{{ file_url(node.field_imagetop.entity.uri.value) }}&quot;);	background-position: top left, center;	background-size: 100%, cover;	background-repeat: repeat, no-repeat;">
  <div class="container">
      <div class="row" style="">
        <div class="col-md-12 col-lg-6 col-10">
          <h2 class="text-white">{{ label }}</h2>
        </div>
      </div>
      <div class="row" style="">
        <div class="col-md-12 col-lg-6 border-top">
          <div class="row">
            <div class="col-md-6 col-6">
              <h6 class="mb-0 my-2 text-white"><i class="fa-regular fa-calendar-days fa-lg mr-2"></i>{{ date }}</h6>
            </div>
            <div class="col-md-6 d-flex justify-content-end col-6">
              <h6 class="mb-0 my-2 text-white">{{ date }}<i class="fa-regular fa-share ml-2"></i></h6>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="d-block d-sm-nonept-3 py-4">
    <div class="container">
      <div class="row pt-4">
        <div class="col-md-6 d-flex flex-column justify-content-between align-items-stretch col-lg-8" style="">
          <div class="row mb-3">
            <div class="col-md-12 col-lg-12">
              {{content.field_audio}}
            </div>
          </div>
          <p class="">{{content.body}}</p>
          {{content.field_imagege}}
          <p></p>
          <div class="row mb-3">
              {{content.field_tags}}
          </div>
        </div>
        <div class="col-md-6 col-lg-4" style="">
        {{sidebar_second}}
      </div>
      </div>
    </div>
  </div>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<!--script audio start -->
<script style="">
// Play audio & mostra pause btn
var playShow = function() {
  audionoticia.play();
  playBtn.style.display = "none";
  pauseBtn.style.display = "inline-block";
};
// Pause audio & mostra play btn
var pauseShow = function() {
  audionoticia.pause();
  playBtn.style.display = "inline-block";
  pauseBtn.style.display = "none";
};
</script>

